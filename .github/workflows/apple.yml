name: MacOS Python build

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  FORCE_COLOR: 1

jobs:
  pythonbuild:
    runs-on: 'macos-13'
    steps:
      - uses: actions/checkout@v4

      - name: Emit rustc version
        run: |
          rustc --version > .rustc-version

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-pythonbuild-${{ hashFiles('Cargo.lock', '.rustc-version') }}

      - name: Build
        run: |
          cargo build --release

      - name: Upload pythonbuild Executable
        uses: actions/upload-artifact@v4
        with:
          name: pythonbuild
          path: target/release/pythonbuild

  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: astral-sh/setup-uv@v4

      - name: Get pull request labels
        id: get-labels
        run: |
          # Convert GitHub labels array to comma-separated string
          LABELS=$(echo '${{ toJson(github.event.pull_request.labels.*.name) }}' | jq -r 'join(",")')
          echo "labels=$LABELS" >> $GITHUB_OUTPUT
          
      - name: Generate build matrix
        id: set-matrix
        run: |
          uv run ci-matrix.py --platform darwin --labels "${{ steps.get-labels.outputs.labels }}" > matrix.json && echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT
          # Display the matrix for debugging too
          cat matrix.json | jq

  build:
    needs: 
      - generate-matrix
      - pythonbuild
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
      fail-fast: false
    runs-on: macos-14
    name: ${{ matrix.python }} / ${{ matrix.target_triple }} / ${{ matrix.build_option }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build
        run: |
          echo "Building for:"
          echo "OS: ${{ matrix.os }}"
          echo "Architecture: ${{ matrix.arch }}"
          echo "Python: ${{ matrix.python }}"
          echo "Target Triple: ${{ matrix.target_triple }}"
          echo "Build Option: ${{ matrix.build_option }}"
